registers
8 registers
r0 == zero
r7 == lr
pc == [r0]
condition reg NZCV

ops:
0000 - add
0001 - sub
0010 - and
0011 - or
0100 - xor
0101 - lsl
0110 - lsr
0111 - asr

10xx - branch

11xx - misc

alu ops:
1111 1100 000 00000
5432 1098 765 43210
-------------------
OOOO iDDD AAA bbbbb

    d addressing mode:
     0DDD           - register direct
     1DDD           - register indirect
     0000           - dest is r0, throw away result
    b addressing mode:
              0XXXX - immediate (4 bit signed)
              10000 - immediate is next instruction word (r0) (16 bit signed)
              10BBB - register direct
              11BBB - register indirect

branch ops:
11 1111 0000000000
54 3210 9876543210
------------------
    short conditional branch:
10 CCCC oooooooooo  - b  - conditional branch (unconditional is 1111)

         10 bit signed offset (-512/511)

    long unconditional branch (with link), uses nv conditional:
10 1111 Lxxxxxxrrr   - b(l) reg
10 1111 Lxxxxxx000   - b(l) #16bit signed offset (next instruction word)

        L moves next instruction into r7 (lr register)

unused:
11 11110000000000
54 32109876543210
-----------------
11 xxxxxxxxxxxxxx

pseudo instructions:
    mov d, b    - add d, r0, b
    neg d, b    - sub d, r0, b
    not d, a    - xor d, a, #-1
    neg d       - sub d, r0, d
    not d       - sub d, r0, d
    teq a, b    - xor r0, a, b
    tst a, b    - and r0, a, b
    cmp a, b    - sub r0, a, b
    cmn a, b    - add r0, a, b

special cases:
    branch to register, use [r0] as target
        mov [r0], lr - branch to lr

    branch to fixed 16bit address
        b #imm - mov [r0], #imm

    indirect branch to register
        b reg  - mov [r0], reg

    double indirect branch to register
        b reg  - mov [r0], [reg]

    access pc (pc reads as +2) use [r0] as source
        mov lr, pc - mov r7, [r0]

conditions (ARM style):
0000 eq          Equal.                                                      Z==1
0001 ne          Not equal.                                                  Z==0
0010 cs or hs    Unsigned higher or same (or carry set).                     C==1
0011 cc or lo    Unsigned lower (or carry clear).                            C==0
0100 mi          Negative. The mnemonic stands for "minus".                  N==1
0101 pl          Positive or zero. The mnemonic stands for "plus".           N==0
0110 vs          Signed overflow. The mnemonic stands for "V set".           V==1
0111 vc          No signed overflow. The mnemonic stands for "V clear".      V==0
1000 hi          Unsigned higher.                                            (C==1) && (Z==0)
1001 ls          Unsigned lower or same.                                     (C==0) || (Z==1)
1010 ge          Signed greater than or equal.                               N==V
1011 lt          Signed less than.                                           N!=V
1100 gt          Signed greater than.                                        (Z==0) && (N==V)
1101 le          Signed less than or equal.                                  (Z==1) || (N!=V)
1110 al (or omitted) Always executed.
1111 nv          never                                                       (use to signal long form)
